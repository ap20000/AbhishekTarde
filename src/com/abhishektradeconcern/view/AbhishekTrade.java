/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.abhishektradeconcern.view;

import com.abhishektradeconcern.controller.BinarySearchAlgorithm;
import com.abhishektradeconcern.controller.InsertionSort;
import com.abhishektradeconcern.controller.SelectionSort;
import com.abhishektradeconcern.model.AbhishekTradeModel;

import javax.swing.JOptionPane;

import javax.swing.table.DefaultTableModel;

/**
 *
 * @author NITRO5
 */
public class AbhishekTrade extends javax.swing.JFrame {

    /**
     * Creates new form
     */
    private AbhishekTradeModel[] laptopArrays;

    public AbhishekTrade() {
        
        initComponents();
        initializelaptop();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        pnlMain = new javax.swing.JPanel();
        pnlTitle = new javax.swing.JPanel();
        lblTitle = new javax.swing.JLabel();
        btnInsertionSortLaptopID = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbldetails = new javax.swing.JTable();
        Search = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jTlaptopid = new javax.swing.JTextField();
        jTname = new javax.swing.JTextField();
        jTmodelnumber = new javax.swing.JTextField();
        jButtonAddnewData = new javax.swing.JButton();
        jTprice = new javax.swing.JTextField();
        jTspecialfeatures = new javax.swing.JTextField();
        jCombocolour = new javax.swing.JComboBox<>();
        jCombomemory = new javax.swing.JComboBox<>();
        jCombostorage = new javax.swing.JComboBox<>();
        jButtonUpdate = new javax.swing.JButton();
        jButtonDelete = new javax.swing.JButton();
        jComboprocessor = new javax.swing.JComboBox<>();
        jCombobrand = new javax.swing.JComboBox<>();
        jtsearchf = new javax.swing.JTextField();
        btnInsertionSortPrice = new javax.swing.JButton();
        btnSelectiobrand = new javax.swing.JButton();
        btnSelectionName = new javax.swing.JButton();
        jComboBoxSearchch = new javax.swing.JComboBox<>();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pnlMain.setBackground(new java.awt.Color(24, 104, 174));

        pnlTitle.setBackground(new java.awt.Color(198, 215, 235));

        lblTitle.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(51, 0, 51));
        lblTitle.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/abhishektradeconcern/view/logo.png"))); // NOI18N
        lblTitle.setText("Abhishek Trade Concern");
        lblTitle.setToolTipText("");

        javax.swing.GroupLayout pnlTitleLayout = new javax.swing.GroupLayout(pnlTitle);
        pnlTitle.setLayout(pnlTitleLayout);
        pnlTitleLayout.setHorizontalGroup(
            pnlTitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlTitleLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblTitle)
                .addGap(465, 465, 465))
        );
        pnlTitleLayout.setVerticalGroup(
            pnlTitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTitleLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(30, Short.MAX_VALUE))
        );

        btnInsertionSortLaptopID.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        btnInsertionSortLaptopID.setText("Laptop ID");
        btnInsertionSortLaptopID.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Insertion Sort by", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial Black", 1, 12))); // NOI18N
        btnInsertionSortLaptopID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertionSortLaptopIDActionPerformed(evt);
            }
        });

        tbldetails.setBackground(new java.awt.Color(204, 204, 204));
        tbldetails.setFont(new java.awt.Font("Arial", 1, 10)); // NOI18N
        tbldetails.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                { new Integer(1), "Dell XPS 13", "XPS 13 9300", "Dell",  new Integer(173325), "16 GB DDR4", "1 TB SSD", "Intel Core i7", "Grey", "Fingerprint Reader"},
                { new Integer(2), "MacBook Pro 13", "A1989", "Apple",  new Integer(200011), "16 GB ", "1 TB SSD", "Apple M1 Chip", "Silver", "Face ID"},
                { new Integer(3), "HP Spectre x360", "15t-aw400", "Hp",  new Integer(191800), "8 GB DDR4", "512 GB SSD", "Intel Core i7-1165G7", "Blue", "Touch Bar"},
                { new Integer(5), "Asus Rog Zephyrus G14", "GA401IV", "Asus",  new Integer(225880), "16 GB DDR4", "1 TB SSD", "AMD RYZEN 5 5000", "White", "NVIDIA RTX 2060 GPU"},
                { new Integer(4), "Lenovo ThinkPad X1", "20U9005MUS", "Lenovo",  new Integer(224800), "8 GB", "512 GB SSD", "Intel Core i7", "White", "Fingerprint Reader"},
                { new Integer(6), "Acer Swift 5", "SF314-57", "Acer",  new Integer(108880), "16 GB DDR4", "1 TB SSD", "Intel Core i7", "Black", "Touch Screen"},
                { new Integer(7), "Razer Blade 15", "RZ09-03330", "Razer",  new Integer(270000), "16 GB DDR4", "512 GB SSD", "Intel Core i7", "Mercury White", "RGB Chroma Keyboard"},
                { new Integer(8), "Acer Nitro 5", "AN515-54", "Acer",  new Integer(118000), "16 GB DDR4", "512 GB SSD", "Intel Core i5-9300H", "Black and red", "Backlit keyboard"}
            },
            new String [] {
                "Laptop ID", " Name", "Model Number", "Brand", "Price", "Memory", "Storage", "Processor", "Colour", "Special Features"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tbldetails.setSelectionBackground(new java.awt.Color(204, 204, 204));
        jScrollPane1.setViewportView(tbldetails);
        if (tbldetails.getColumnModel().getColumnCount() > 0) {
            tbldetails.getColumnModel().getColumn(0).setResizable(false);
            tbldetails.getColumnModel().getColumn(1).setResizable(false);
            tbldetails.getColumnModel().getColumn(2).setResizable(false);
            tbldetails.getColumnModel().getColumn(3).setResizable(false);
            tbldetails.getColumnModel().getColumn(4).setResizable(false);
            tbldetails.getColumnModel().getColumn(5).setResizable(false);
            tbldetails.getColumnModel().getColumn(6).setResizable(false);
            tbldetails.getColumnModel().getColumn(7).setResizable(false);
            tbldetails.getColumnModel().getColumn(8).setResizable(false);
            tbldetails.getColumnModel().getColumn(9).setResizable(false);
        }

        Search.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        Search.setText("Search");
        Search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchActionPerformed(evt);
            }
        });

        jPanel3.setBackground(new java.awt.Color(198, 215, 235));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Add New Data", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14))); // NOI18N

        jTlaptopid.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        jTlaptopid.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Laptop ID", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial Black", 1, 12))); // NOI18N

        jTname.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        jTname.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Name", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial Black", 1, 12))); // NOI18N

        jTmodelnumber.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        jTmodelnumber.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Model Number", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial Black", 1, 12))); // NOI18N
        jTmodelnumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTmodelnumberActionPerformed(evt);
            }
        });

        jButtonAddnewData.setBackground(new java.awt.Color(24, 104, 174));
        jButtonAddnewData.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        jButtonAddnewData.setText("ADD");
        jButtonAddnewData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddnewDataActionPerformed(evt);
            }
        });

        jTprice.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        jTprice.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Price", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial Black", 1, 12))); // NOI18N

        jTspecialfeatures.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        jTspecialfeatures.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Special Features", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial Black", 1, 12))); // NOI18N

        jCombocolour.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        jCombocolour.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Grey", "Silver", "Blue", "White", "Black", "Mercury White", "Black and red" }));
        jCombocolour.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Colour", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial Black", 1, 12))); // NOI18N

        jCombomemory.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        jCombomemory.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "8 GB DDR4", "16 GB DDR4", "32 GB DDR4", "16GB DDR5" }));
        jCombomemory.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Memory (RAM)", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial Black", 1, 12))); // NOI18N

        jCombostorage.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        jCombostorage.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "512 GB SSD", "1 TB SSD" }));
        jCombostorage.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Storage", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial Black", 1, 12))); // NOI18N

        jButtonUpdate.setBackground(new java.awt.Color(24, 104, 174));
        jButtonUpdate.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        jButtonUpdate.setText("UPDATE");
        jButtonUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUpdateActionPerformed(evt);
            }
        });

        jButtonDelete.setBackground(new java.awt.Color(24, 104, 174));
        jButtonDelete.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        jButtonDelete.setText("Delete");
        jButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteActionPerformed(evt);
            }
        });

        jComboprocessor.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        jComboprocessor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Intel Core i7", "Intel Core i5", "Apple M1 Chip", "AMD RYZEN 5 500" }));
        jComboprocessor.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Processor", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial Black", 1, 12))); // NOI18N

        jCombobrand.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        jCombobrand.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Dell", "Hp", "Apple", "Acer", "Asus", "Lenovo", "Razer" }));
        jCombobrand.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Brand", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial Black", 1, 12))); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTlaptopid, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboprocessor, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(40, 40, 40)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTname, javax.swing.GroupLayout.DEFAULT_SIZE, 153, Short.MAX_VALUE)
                            .addComponent(jCombocolour, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jButtonUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(63, 63, 63)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTspecialfeatures)
                    .addComponent(jTmodelnumber)
                    .addComponent(jButtonAddnewData, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE))
                .addGap(45, 45, 45)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTprice, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                            .addComponent(jCombobrand, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(40, 40, 40)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCombomemory, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jCombostorage, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jButtonDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 58, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jTmodelnumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(222, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTlaptopid)
                                    .addComponent(jTname)
                                    .addComponent(jCombostorage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(25, 25, 25))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jTprice)
                                .addGap(29, 29, 29)))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTspecialfeatures, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jCombomemory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboprocessor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jCombobrand, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jCombocolour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(36, 36, 36)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonAddnewData, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonDelete, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE))
                        .addContainerGap(61, Short.MAX_VALUE))))
        );

        jtsearchf.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Search", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial Black", 1, 12))); // NOI18N

        btnInsertionSortPrice.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        btnInsertionSortPrice.setText("Price");
        btnInsertionSortPrice.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Insertion Sort by", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial Black", 1, 12))); // NOI18N
        btnInsertionSortPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertionSortPriceActionPerformed(evt);
            }
        });

        btnSelectiobrand.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        btnSelectiobrand.setText("Brand");
        btnSelectiobrand.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Selection Sort by", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial Black", 1, 12))); // NOI18N
        btnSelectiobrand.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelectiobrandActionPerformed(evt);
            }
        });

        btnSelectionName.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        btnSelectionName.setText("Name");
        btnSelectionName.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Selection Sort by", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial Black", 1, 12))); // NOI18N
        btnSelectionName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelectionNameActionPerformed(evt);
            }
        });

        jComboBoxSearchch.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        jComboBoxSearchch.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Laptop ID", "Price", "Brand", "Name" }));

        javax.swing.GroupLayout pnlMainLayout = new javax.swing.GroupLayout(pnlMain);
        pnlMain.setLayout(pnlMainLayout);
        pnlMainLayout.setHorizontalGroup(
            pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlTitle, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlMainLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jtsearchf, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Search, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxSearchch, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addComponent(btnInsertionSortLaptopID, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(btnInsertionSortPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(btnSelectiobrand, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(btnSelectionName, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39))
            .addGroup(pnlMainLayout.createSequentialGroup()
                .addGap(100, 100, 100)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlMainLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1289, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        pnlMainLayout.setVerticalGroup(
            pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMainLayout.createSequentialGroup()
                .addComponent(pnlTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(pnlMainLayout.createSequentialGroup()
                            .addComponent(jComboBoxSearchch, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(5, 5, 5)
                            .addComponent(Search, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jtsearchf, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnInsertionSortLaptopID)
                        .addComponent(btnInsertionSortPrice)
                        .addComponent(btnSelectiobrand)
                        .addComponent(btnSelectionName)))
                .addGap(27, 27, 27)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnlMain, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(29, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(15, 15, 15))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void initializelaptop() {
        // Initialize the model with data from the table
        laptopArrays = new AbhishekTradeModel[tbldetails.getRowCount()];

        for (int i = 0; i < tbldetails.getRowCount(); i++) {
            int laptopID = (int) tbldetails.getValueAt(i, 0);
            String name = (String) tbldetails.getValueAt(i, 1);
            String modelNumber = (String) tbldetails.getValueAt(i, 2);
            String brand = (String) tbldetails.getValueAt(i, 3);
            int price = (int) tbldetails.getValueAt(i, 4);
            String memory = (String) tbldetails.getValueAt(i, 5);
            String storage = (String) tbldetails.getValueAt(i, 6);
            String processor = (String) tbldetails.getValueAt(i, 7);
            String colour = (String) tbldetails.getValueAt(i, 8);
            String specialfeatures = (String) tbldetails.getValueAt(i, 9);

            laptopArrays[i] = new AbhishekTradeModel(laptopID, name, modelNumber, brand, price, memory, storage, processor, colour, specialfeatures);
        }
    }


    private void jButtonAddnewDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddnewDataActionPerformed

        int laptopID;
        String name;
        String modelNumber;
        int price;
        String processor;
        String specialfeatures;
        String brand;
        String memory;
        String storage;
        String colour;
        try {
            laptopID = Integer.parseInt(jTlaptopid.getText());
            if (laptopID <= 0) {  //if laptop id zero then this code excute
                JOptionPane.showMessageDialog(this, "Laptop ID must be greather than:" + laptopID, "Input Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "  Lptop ID must be integer:" , "Input Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        name = jTname.getText().trim();
        if (name.isEmpty() || SpecialCharacters(name)) {  //if name has empty or any specailsymbol 
            JOptionPane.showMessageDialog(this, " Name Field  :" + name, "Input Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        modelNumber = jTmodelnumber.getText().trim();

        if (modelNumber.isEmpty() || SpecialCharacters(modelNumber)) { //if model number empty or have any specailsymbol
            JOptionPane.showMessageDialog(this, "Symbol not add the model Number:" + modelNumber, "Input Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        price = Integer.parseInt(jTprice.getText());
        try {
            if (price <= 0) {  // if price less thean zero or equal to zero
                JOptionPane.showMessageDialog(this, " Price must be greather than zero .", "Input Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            if (price < 5000) { //if price is less than 50000
                JOptionPane.showMessageDialog(this, "Price must be 5000 or greater.", "Input Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Price must be integer ! Please enter a valid integer.", "Input Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        specialfeatures = jTspecialfeatures.getText();
        if (specialfeatures.isEmpty() || SpecialCharacters(specialfeatures)) {
            JOptionPane.showMessageDialog(this, "Special Features Text field:" + specialfeatures, "Input Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        memory = jCombomemory.getSelectedItem().toString();
        storage = jCombostorage.getSelectedItem().toString();
        brand = (String) jCombobrand.getSelectedItem();
        colour = jCombocolour.getSelectedItem().toString();
        processor = jComboprocessor.getSelectedItem().toString();

        if (LaptopExists(laptopID) || isModelNumberExists(modelNumber)) { //check laptopid and model number for not add same 

            JOptionPane.showMessageDialog(this, "Laptop ID:" + laptopID + "And Model Number already exists:" + modelNumber, "Error", JOptionPane.ERROR_MESSAGE);

        } else {

            DefaultTableModel tableLaptop = (DefaultTableModel) tbldetails.getModel();
            tableLaptop.addRow(new Object[]{laptopID, name, modelNumber, brand, price, memory, storage, processor, colour, specialfeatures});

            initializelaptop();  // this is for insert , selction and binary search after add details in table 
            JOptionPane.showMessageDialog(this, "Laptop Details: " + laptopID + "add suceessful", "Update Successful", JOptionPane.INFORMATION_MESSAGE);

        }
    }//GEN-LAST:event_jButtonAddnewDataActionPerformed

    private boolean SpecialCharacters(String input) {
      // it check for specailcharacters on any input
        String specialCharacters = "~`!@#$%^&*()-_+=<>?,./[]{}\\|;:'\"";

        for (char c : input.toCharArray()) {
            if (specialCharacters.contains(String.valueOf(c))) {
                return true;
            }
        }
        return false;
    }


    private void jButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteActionPerformed
        String laptopId = JOptionPane.showInputDialog("Enter Laptop ID to delete:");
        try {

            if (laptopId == null || laptopId.isEmpty()) { // it check laptopid are empty or null
                JOptionPane.showMessageDialog(this, "Laptop ID must be integer." + laptopId + "", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            if (!laptopIdExists(laptopId)) { // it check laptop id exist on table 
                JOptionPane.showMessageDialog(this, "Laptop ID does not exist in the Details." + laptopId + "", "Error", JOptionPane.INFORMATION_MESSAGE);
                return;
            }
            DefaultTableModel tableModel = (DefaultTableModel) tbldetails.getModel(); 
            for (int i = tableModel.getRowCount() - 1; i >= 0; i--) {
                String TableInLptopID = tableModel.getValueAt(i, 0).toString();
                if (TableInLptopID.equals(laptopId)) {
                    tableModel.removeRow(i);
                    initializelaptop(); 
                    JOptionPane.showMessageDialog(this, "Laptop ID Delete from Table.", "Update Successful", JOptionPane.INFORMATION_MESSAGE);
                }
                
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Laptop ID must integer ! Please enter a valid integer.", "Input Error", JOptionPane.ERROR_MESSAGE);

        }
    }//GEN-LAST:event_jButtonDeleteActionPerformed

    private void jButtonUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUpdateActionPerformed
        int laptopID;
        String name;
        String modelNumber;
        int price;
        String processor;
        String specialfeatures;
        String brand;
        String memory;
        String storage;
        String colour;
        try {
            laptopID = Integer.parseInt(jTlaptopid.getText());
            if (laptopID <= 0) { // if laptop id less than zero or equal to zero
                JOptionPane.showMessageDialog(this, "Laptop ID is:" + laptopID, "Input Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, " Please enter a valid integer in a Lptop ID.", "Input Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        name = jTname.getText().trim();
        if (name.isEmpty() || SpecialCharacters(name)) {
            JOptionPane.showMessageDialog(this, "Symbol are not allowed in Laptop Name:" + name, "Input Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        modelNumber = jTmodelnumber.getText().trim();

        if (modelNumber.isEmpty() || SpecialCharacters(modelNumber)) {
            JOptionPane.showMessageDialog(this, "Symbol are not allowed in Laptop Name:" + modelNumber, "Input Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        price = Integer.parseInt(jTprice.getText());
        try {
            if (price <= 0) {
                JOptionPane.showMessageDialog(this, "Plaese price must be greather than zero .", "Input Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            if (price < 5000) {
                JOptionPane.showMessageDialog(this, "Price must be 5000 or greater.", "Input Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Invalid price. Please enter a valid integer.", "Input Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        specialfeatures = jTspecialfeatures.getText();
        if (specialfeatures.isEmpty() || SpecialCharacters(specialfeatures)) {
            JOptionPane.showMessageDialog(this, "Symbol are not allowed in Laptop Name:" + specialfeatures, "Input Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        memory = jCombomemory.getSelectedItem().toString();
        storage = jCombostorage.getSelectedItem().toString();
        brand = (String) jCombobrand.getSelectedItem();
        colour = jCombocolour.getSelectedItem().toString();
        processor = jComboprocessor.getSelectedItem().toString();

        boolean laptopIDExists = laptopIdExists(String.valueOf(laptopID));

        if (laptopIDExists) { // check laptop id if exists then add new details 
            // Update the corresponding row in the table
            DefaultTableModel tableLaptop = (DefaultTableModel) tbldetails.getModel();
            for (int i = 0; i < tableLaptop.getRowCount(); i++) {
                String TableInLptopID = tableLaptop.getValueAt(i, 0).toString();
                if (TableInLptopID.equals(String.valueOf(laptopID))) {
                    // Update the row with the new data
                    tableLaptop.setValueAt(name, i, 1);
                    tableLaptop.setValueAt(modelNumber, i, 2);
                    tableLaptop.setValueAt(brand, i, 3);
                    tableLaptop.setValueAt(price, i, 4);
                    tableLaptop.setValueAt(memory, i, 5);
                    tableLaptop.setValueAt(storage, i, 6);
                    tableLaptop.setValueAt(processor, i, 7);
                    tableLaptop.setValueAt(colour, i, 8);
                    tableLaptop.setValueAt(specialfeatures, i, 9);

                    JOptionPane.showMessageDialog(this, "Laptop Details: " + laptopID + " Update suceessful", "Update Successful", JOptionPane.INFORMATION_MESSAGE);
                    break;
                }
            }
        } else {
            initializelaptop();
            // Laptop ID does not exist, handle accordingly
            JOptionPane.showMessageDialog(this, "Laptop ID does not exist." + laptopID + " Please eneter correct Laptop ID ", "Update Error", JOptionPane.ERROR_MESSAGE);
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonUpdateActionPerformed

    private void jTmodelnumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTmodelnumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTmodelnumberActionPerformed

    private void btnInsertionSortLaptopIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertionSortLaptopIDActionPerformed
        // TODO add your handling code here:
        InsertionSort inSort = new InsertionSort();
        laptopArrays = inSort.insertionBYID(laptopArrays);

        updateTableFromLaptopModel();
    }//GEN-LAST:event_btnInsertionSortLaptopIDActionPerformed

    private void btnInsertionSortPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertionSortPriceActionPerformed
        // TODO add your handling code here:
        InsertionSort inSort = new InsertionSort();
        laptopArrays = inSort.insertionBYPrice(laptopArrays);

        updateTableFromLaptopModel();
    }//GEN-LAST:event_btnInsertionSortPriceActionPerformed

    private void btnSelectiobrandActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelectiobrandActionPerformed
        // TODO add your handling code here:
        SelectionSort selectSort = new SelectionSort();
        laptopArrays = selectSort.selectionBYBrand(laptopArrays);

        updateTableFromLaptopModel();
    }//GEN-LAST:event_btnSelectiobrandActionPerformed

    private void btnSelectionNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelectionNameActionPerformed
        // TODO add your handling code here:
        SelectionSort selectSort = new SelectionSort();
        laptopArrays = selectSort.selectionBYName(laptopArrays);

        updateTableFromLaptopModel();
    }//GEN-LAST:event_btnSelectionNameActionPerformed

    private void SearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchActionPerformed
        // TODO add your handling code here:
        String searchKey = jtsearchf.getText();
        String selectedOption = (String) jComboBoxSearchch.getSelectedItem();
        
        int resultIndex = -1;

        BinarySearchAlgorithm searchAlgorithm = new BinarySearchAlgorithm();
        Object key = null;
        switch (selectedOption) {
            case "Name":
                SelectionSort AA = new SelectionSort();
                laptopArrays = AA.selectionBYName(laptopArrays);
                resultIndex = searchAlgorithm.searchthroughName(laptopArrays, 0, laptopArrays.length -1, searchKey);
                updateTableFromLaptopModel();
                key = searchKey;
                break;
            case "Brand":
                SelectionSort Ab = new SelectionSort();
                laptopArrays = Ab.selectionBYBrand(laptopArrays);
                resultIndex = searchAlgorithm.searchthroughBrand(laptopArrays, 0, laptopArrays.length -1, searchKey);
                updateTableFromLaptopModel();
                
                key = searchKey;
                break;
            case "Laptop ID":
                InsertionSort Ai = new InsertionSort();
                laptopArrays = Ai.insertionBYID(laptopArrays);
                resultIndex = searchAlgorithm.searchthroughLaptopID(laptopArrays, 0, laptopArrays.length -1, Integer.parseInt(searchKey));
                updateTableFromLaptopModel();
                
                key = searchKey;
                
                break;
            case "Price":
                InsertionSort Ap = new InsertionSort();
                laptopArrays = Ap.insertionBYPrice(laptopArrays);
                resultIndex = searchAlgorithm.searchthroughPrice(laptopArrays, 0, laptopArrays.length -1, Integer.parseInt(searchKey));
                updateTableFromLaptopModel();
                
                key = searchKey;
                
                break;
            default:
                JOptionPane.showMessageDialog(this, "Search details are invalid on laptop Table.");
                break;
        }
            if (resultIndex != -1) {
                JOptionPane.showMessageDialog(this, "Details found"+ selectedOption+" "+" at index of laptop table " + resultIndex);
            } else {
                JOptionPane.showMessageDialog(this, "Details are not found on laptop table");
            }
        


    }//GEN-LAST:event_SearchActionPerformed
    private boolean LaptopExists(int laptopID) {
        DefaultTableModel tableLaptop = (DefaultTableModel) tbldetails.getModel();
        for (int i = 0; i < tableLaptop.getRowCount(); i++) {
            if ((int) tableLaptop.getValueAt(i, 0) == laptopID) {
                return true;
            }
        }
        return false;
    }

    //delete and update
    private boolean laptopIdExists(String laptopID) {
        DefaultTableModel tableLaptop = (DefaultTableModel) tbldetails.getModel();
        for (int i = 0; i < tableLaptop.getRowCount(); i++) {
            String laptopIDInTable = tableLaptop.getValueAt(i, 0).toString();
            if (laptopIDInTable.equals(laptopID)) {
                return true;
            }
        }
        return false;
    }

    // Helper method to check if model number already exists in the table
    private boolean isModelNumberExists(String modelNumber) {
        DefaultTableModel tableLaptop = (DefaultTableModel) tbldetails.getModel();
        for (int i = 0; i < tableLaptop.getRowCount(); i++) {
            if (tableLaptop.getValueAt(i, 2).equals(modelNumber)) {
                return true;
            }
        }
        return false;
    }

    private void updateTableFromLaptopModel() {
        DefaultTableModel tableModel = (DefaultTableModel) tbldetails.getModel();
        tableModel.setRowCount(0); // Clear existing rows

        for (AbhishekTradeModel laptop : laptopArrays) {
            tableModel.addRow(new Object[]{
                laptop.getLaptopID(),
                laptop.getName(),
                laptop.getModelNumber(),
                laptop.getBrand(),
                laptop.getPrice(),
                laptop.getMemory(),
                laptop.getStorage(),
                laptop.getProcessor(),
                laptop.getColour(),
                laptop.getSpecialFeatures(),});
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AbhishekTrade.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AbhishekTrade.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AbhishekTrade.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AbhishekTrade.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new AbhishekTrade().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Search;
    private javax.swing.JButton btnInsertionSortLaptopID;
    private javax.swing.JButton btnInsertionSortPrice;
    private javax.swing.JButton btnSelectiobrand;
    private javax.swing.JButton btnSelectionName;
    private javax.swing.JButton jButtonAddnewData;
    private javax.swing.JButton jButtonDelete;
    private javax.swing.JButton jButtonUpdate;
    private javax.swing.JComboBox<String> jComboBoxSearchch;
    private javax.swing.JComboBox<String> jCombobrand;
    private javax.swing.JComboBox<String> jCombocolour;
    private javax.swing.JComboBox<String> jCombomemory;
    private javax.swing.JComboBox<String> jComboprocessor;
    private javax.swing.JComboBox<String> jCombostorage;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTlaptopid;
    private javax.swing.JTextField jTmodelnumber;
    private javax.swing.JTextField jTname;
    private javax.swing.JTextField jTprice;
    private javax.swing.JTextField jTspecialfeatures;
    private javax.swing.JTextField jtsearchf;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JPanel pnlMain;
    private javax.swing.JPanel pnlTitle;
    private javax.swing.JTable tbldetails;
    // End of variables declaration//GEN-END:variables

}
